name: InfraWeave GitOps

on:
  workflow_call:
    secrets:
      AWS_ACCOUNT_ID:
        required: true
        description: 'AWS Account ID for OIDC role assumption'

jobs:
  discover-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.discover.outputs.matrix }}
      has-changes: ${{ steps.discover.outputs.has_changes }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper diff

      - name: Download InfraWeave CLI
        run: |
          curl -L -o infraweave https://github.com/infraweave-io/infraweave/releases/download/v0.0.94-rc.2/cli-linux-amd64
          chmod +x infraweave
          sudo mv infraweave /usr/local/bin

      - name: Discover manifest changes
        id: discover
        run: |
          echo "Discovering changed manifests..."
          
          # Use explicit refs if available (from GitHub event), otherwise CLI will auto-detect
          if [ -n "${{ github.event.before }}" ] && [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]; then
            # Push event with valid before SHA
            matrix_json=$(PROVIDER=none infraweave gitops diff \
              --before "${{ github.event.before }}" \
              --after "${{ github.event.after }}")
          else
            # Pull request or first push - let CLI auto-detect based on branch
            matrix_json=$(PROVIDER=none infraweave gitops diff)
          fi
          
          echo "Discovered changes:"
          echo "$matrix_json" | jq '.'
          
          # Check if we have any changes
          change_count=$(echo "$matrix_json" | jq '. | length')
          
          if [ "$change_count" -eq 0 ]; then
            echo "No infrastructure changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            echo "Found $change_count infrastructure change(s)"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            # Transform the output into a matrix format
            # Add job-specific fields for the matrix
            matrix_with_jobs=$(echo "$matrix_json" | jq -c '{include: [.[] | {
              name: .name,
              kind: .kind,
              namespace: .namespace,
              region: .region,
              apiVersion: .apiVersion,
              action: .action,
              path: .path,
              content: .content,
              job_name: "\(.kind)/\(.name) (\(.namespace)) - \(.action)"
            }]}')
            
            echo "matrix=$matrix_with_jobs" >> $GITHUB_OUTPUT
          fi

  apply-changes:
    needs: discover-changes
    if: needs.discover-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Continue even if one deployment fails
      max-parallel: 10   # Limit concurrent deployments
      matrix: ${{ fromJson(needs.discover-changes.outputs.matrix) }}
    
    name: ${{ matrix.job_name }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # TODO: Make these dynamic based on repository/environment
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/infraweave-github-actions-role
          aws-region: ${{ matrix.region }}

      - name: Download InfraWeave CLI
        run: |
          curl -L -o infraweave https://github.com/infraweave-io/infraweave/releases/download/v0.0.94-rc.2/cli-linux-amd64
          chmod +x infraweave
          sudo mv infraweave /usr/local/bin

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Write manifest to temporary file
        run: |
          echo "Writing manifest content to temporary file..."
          echo '${{ matrix.content }}' | yq -P '.' > /tmp/manifest.yaml
          echo "Manifest written:"
          cat /tmp/manifest.yaml

      - name: Run InfraWeave command
        id: infraweave
        run: |
          echo "Running InfraWeave ${{ matrix.action }} for ${{ matrix.kind }}/${{ matrix.name }}"
          
          # Determine the command based on action
          case "${{ matrix.action }}" in
            apply)
              echo "Applying infrastructure changes..."
              echo Would run: infraweave apply github-${{ github.repository }}/${{ matrix.namespace }} /tmp/manifest.yaml
              ;;
            plan)
              echo "Planning infrastructure changes..."
              echo Would run: infraweave plan github-${{ github.repository }}/${{ matrix.namespace }} /tmp/manifest.yaml
              ;;
            destroy)
              echo "Destroying infrastructure..."
              echo Would run: infraweave destroy github-${{ github.repository }}/${{ matrix.namespace }} ${{ matrix.kind }}/${{ matrix.name }}
              ;;
            rename)
              echo "File renamed - no infrastructure changes needed"
              echo "The manifest file path changed, but infrastructure remains the same."
              ;;
            *)
              echo "Unknown action: ${{ matrix.action }}"
              exit 1
              ;;
          esac

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request' && matrix.action == 'plan'
        uses: actions/github-script@v7
        with:
          script: |
            const action = '${{ matrix.action }}';
            const kind = '${{ matrix.kind }}';
            const name = '${{ matrix.name }}';
            const namespace = '${{ matrix.namespace }}';
            const region = '${{ matrix.region }}';
            const path = '${{ matrix.path }}';
            
            const body = `## Infrastructure Plan: \`${kind}/${name}\`
            
            **Namespace:** \`${namespace}\`  
            **Region:** \`${region}\`  
            **File:** \`${path}\`  
            **Action:** \`${action}\`
            
            <details>
            <summary>📄 View Manifest</summary>
            
            \`\`\`yaml
            ${{ matrix.content }}
            \`\`\`
            </details>
            
            ✅ This infrastructure change will be applied when the PR is merged to \`main\`.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  summary:
    needs: [discover-changes, apply-changes]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Job Summary
        run: |
          echo "# InfraWeave GitOps Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.discover-changes.outputs.has-changes }}" == "true" ]; then
            echo "Infrastructure changes detected and processed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the job details above for individual deployment results." >> $GITHUB_STEP_SUMMARY
          else
            echo "No infrastructure changes detected in this commit" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.apply-changes.result }}" == "failure" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ Some deployments failed. Please review the logs above." >> $GITHUB_STEP_SUMMARY
          fi
