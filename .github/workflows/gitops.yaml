name: InfraWeave GitOps

on:
  workflow_call:
    inputs:
      account_id:
        description: 'AWS Account ID'
        required: true
        type: string
      environment:
        description: 'InfraWeave environment (e.g., dev, prod)'
        required: true
        type: string
      region:
        description: 'Region to use (default is us-west-2)'
        required: false
        type: string
        default: us-west-2

permissions:
  id-token: write
  contents: read

jobs:
  discover-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.discover.outputs.matrix }}
      has-changes: ${{ steps.discover.outputs.has_changes }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper diff

      - name: Download InfraWeave CLI
        run: |
          curl -L -o infraweave https://github.com/infraweave-io/infraweave/releases/download/v0.0.94-rc.3/cli-linux-amd64
          chmod +x infraweave
          sudo mv infraweave /usr/local/bin

      - name: Discover manifest changes
        id: discover
        run: |
          echo "Discovering changed manifests..."
          
          # Let CLI auto-detect refs based on GitHub context
          matrix_json=$(PROVIDER=none \
            CURRENT_BRANCH="${{ github.ref_name }}" \
            DEFAULT_BRANCH="${{ github.event.repository.default_branch }}" \
            infraweave gitops diff)
          
          echo "Discovered changes:"
          echo "$matrix_json" | jq '.'
          
          # Check if we have any changes
          change_count=$(echo "$matrix_json" | jq '. | length')
          
          if [ "$change_count" -eq 0 ]; then
            echo "No infrastructure changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            echo "Found $change_count infrastructure change(s)"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "matrix=$(echo "$matrix_json" | jq -c '{include: .}')" >> $GITHUB_OUTPUT
          fi

  apply-changes:
    needs: discover-changes
    if: needs.discover-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: ${{ fromJson(needs.discover-changes.outputs.matrix) }}
    
    name: ${{ matrix.kind }}/${{ matrix.name }} (${{ matrix.namespace }}) - ${{ matrix.action }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.account_id }}:role/infraweave-oidc-role-${{ inputs.environment }}
          aws-region: ${{ matrix.region }}

      - name: Download InfraWeave CLI
        run: |
          curl -L -o infraweave https://github.com/infraweave-io/infraweave/releases/download/v0.0.94-rc.3/cli-linux-amd64
          chmod +x infraweave
          sudo mv infraweave /usr/local/bin

      - name: Write manifest to file
        if: matrix.action != 'destroy' && matrix.action != 'rename'
        run: |
          mkdir -p /tmp
          cat << 'EOF' > /tmp/manifest.yaml
          ${{ matrix.content }}
          EOF
          echo "Manifest written to /tmp/manifest.yaml"
          cat /tmp/manifest.yaml

      - name: Apply infrastructure changes
        if: matrix.action == 'apply'
        run: |
          echo "Applying ${{ matrix.kind }}/${{ matrix.name }} to namespace ${{ matrix.namespace }}"
          infraweave apply github-${{ github.repository }}/${{ matrix.namespace }} /tmp/manifest.yaml

      - name: Plan infrastructure changes
        if: matrix.action == 'plan'
        run: |
          echo "Planning ${{ matrix.kind }}/${{ matrix.name }} in namespace ${{ matrix.namespace }}"
          infraweave plan github-${{ github.repository }}/${{ matrix.namespace }} /tmp/manifest.yaml

      - name: Destroy infrastructure
        if: matrix.action == 'destroy'
        run: |
          echo "Destroying ${{ matrix.kind }}/${{ matrix.name }} from namespace ${{ matrix.namespace }}"
          infraweave destroy github-${{ github.repository }}/${{ matrix.namespace }} ${{ matrix.kind }}/${{ matrix.name }}

      - name: Handle rename
        if: matrix.action == 'rename'
        run: |
          echo "File renamed - no infrastructure changes needed"
          echo "The manifest file path changed from ${{ matrix.path }}, but infrastructure remains the same."

      - name: Comment on PR with plan
        if: github.event_name == 'pull_request' && matrix.action == 'plan'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## Infrastructure Plan: \`${{ matrix.kind }}/${{ matrix.name }}\`
            
            **Namespace:** \`${{ matrix.namespace }}\`  
            **Region:** \`${{ matrix.region }}\`  
            **File:** \`${{ matrix.path }}\`  
            **Action:** \`${{ matrix.action }}\`
            
            <details>
            <summary>📄 View Manifest</summary>
            
            \`\`\`yaml
            ${{ matrix.content }}
            \`\`\`
            </details>
            
            ✅ This infrastructure change will be applied when the PR is merged to \`main\`.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  summary:
    needs: [discover-changes, apply-changes]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Job Summary
        run: |
          echo "# InfraWeave GitOps Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.discover-changes.outputs.has-changes }}" == "true" ]; then
            echo "Infrastructure changes detected and processed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the job details above for individual deployment results." >> $GITHUB_STEP_SUMMARY
          else
            echo "No infrastructure changes detected in this commit" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.apply-changes.result }}" == "failure" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ Some deployments failed. Please review the logs above." >> $GITHUB_STEP_SUMMARY
          fi
